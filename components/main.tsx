/* eslint-disable react/no-unescaped-entities */
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/zDb0ieCivOE
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { IBM_Plex_Sans } from 'next/font/google'
import { Chivo } from 'next/font/google'

ibm_plex_sans({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { JSX, SVGProps } from "react";
import Image from "next/image";

export function Main() {
  return (
    <div className="flex min-h-screen flex-col bg-gradient-to-r from-[#240046] to-[#0e011a] text-[#FFCC00]">
      <header className="sticky top-0 z-10 bg-gradient-to-r from-[#240046] to-[#0e011a] px-4 py-3 shadow-md md:px-8">
        <div className="container mx-auto flex items-center justify-between">
          <Link href="/" className="text-2xl font-bold" prefetch={false}>
            <img width={160} height={"auto"} src="/logo.jpg" alt="" />
          </Link>

          <Link href="/dashboard">
            <Button className="rounded-full bg-[#FFCC00] px-6 py-2 text-[#240046] shadow-lg transition-transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-[#FFCC00] focus:ring-offset-2">
              Lunch App
            </Button>
          </Link>
        </div>
      </header>
      <main className="flex-1">
        <section className="relative bg-gradient-to-r from-[#240046] to-[#0e011a] py-48">
          <div className="container mx-auto px-4 md:px-8">
            <div className="grid grid-cols-1 gap-8 md:grid-cols-2">
              <div className="space-y-6">
                <h1 className="text-4xl leading-tight md:text-5xl lg:text-6xl">
                  Pay Nothing to Pay
                </h1>
                <p
                  className="text-lg leading-relaxed md:text-xl"
                  style={{ color: "#f9e8a1" }}
                >
                  Use staking to cover costs instead of paying directly
                </p>
                <div className="flex space-x-4">
                  <Link href="/dashboard">
                    <Button className="rounded-full bg-[#FFCC00] px-6 py-2 text-[#240046] shadow-lg transition-transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-[#FFCC00] focus:ring-offset-2">
                      Get Started
                    </Button>
                  </Link>
                </div>
              </div>
              <div className="relative">
                <img
                  src="/sui.jpg"
                  alt="Hero Image"
                  width={600}
                  // height={600}
                  className="mx-auto animate-float"
                  // style={{ aspectRatio: "600/600", objectFit: "cover" }}
                />
              </div>
            </div>
          </div>
        </section>

        <section className="bg-gradient-to-r from-[#240046] to-[#0e011a] py-6">
          <div className="container mx-auto px-4 md:px-8">
            <div className="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
              <div className="space-y-4 rounded-lg bg-[#ffffff1a] p-6 shadow-lg transition-transform hover:scale-105">
                <CreditCardIcon className="h-8 w-8" />
                <h3 className="text-2xl font-bold">Zero Cost Support</h3>
                <p
                  className="text-lg leading-relaxed"
                  style={{ color: "#f9e8a1" }}
                >
                  StaPay lets users unlock content by staking, with full
                  principal returnâ€”no payment required.
                </p>
              </div>
              <div className="space-y-4 rounded-lg bg-[#ffffff1a] p-6 shadow-lg transition-transform hover:scale-105">
                <InfoIcon className="h-8 w-8" />
                <h3 className="text-2xl font-bold">Guaranteed Security</h3>
                <p
                  className="text-lg leading-relaxed"
                  style={{ color: "#f9e8a1" }}
                >
                  Every transaction is transparently recorded, ensuring your
                  funds remain secure and untouchable.
                </p>
              </div>
              <div className="space-y-4 rounded-lg bg-[#ffffff1a] p-6 shadow-lg transition-transform hover:scale-105">
                <ShieldIcon className="h-8 w-8" />
                <h3 className="text-2xl font-bold">
                  High Potential Scalability
                </h3>
                <p
                  className="text-lg leading-relaxed"
                  style={{ color: "#f9e8a1" }}
                >
                  Model can be applied beyond content creation, opening doors to
                  vast markets like education.
                </p>
              </div>
            </div>
          </div>
        </section>
      </main>
      <footer className="bg-gradient-to-r from-[#240046] to-[#0e011a] py-8 text-center text-sm text-[#FFCC00]">
        <div className="container mx-auto px-4 md:px-8">
          <p>&copy; 2024 Stapay. All rights reserved.</p>
        </div>
      </footer>
    </div>
  );
}

function BriefcaseIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" />
      <rect width="20" height="14" x="2" y="6" rx="2" />
    </svg>
  );
}

function CreditCardIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="20" height="14" x="2" y="5" rx="2" />
      <line x1="2" x2="22" y1="10" y2="10" />
    </svg>
  );
}

function ImportIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 3v12" />
      <path d="m8 11 4 4 4-4" />
      <path d="M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4" />
    </svg>
  );
}

function InfoIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="10" />
      <path d="M12 16v-4" />
      <path d="M12 8h.01" />
    </svg>
  );
}

function PowerIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 2v10" />
      <path d="M18.4 6.6a9 9 0 1 1-12.77.04" />
    </svg>
  );
}

function ShieldIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z" />
    </svg>
  );
}
